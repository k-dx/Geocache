<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/styles/output.css" >
    <title>Create or edit route</title>
    <style>
        .red {
            color: red;
        }
    </style>
</head>
<body>
    <!-- <pre>route_id = <%= locals.route.id %></pre>
    <pre>owner_id = <%= locals.route.owner_id %></pre>
    <pre>mode = <%= locals.mode %></pre> -->
    <div class="h-screen grid grid-cols-2 gap-4">
        <div id="map">MAP WILL BE HERE</div>
        <div class="py-2">
            <form action="/admin/routes/<%= locals.mode %>" method="post">
                <input type="hidden" name="owner_id" value="<%= locals.route.owner_id %>">
                <% if (locals.mode === 'edit') { %>
                    <input type="hidden" name="route_id" value="<%= locals.route.id %>">
                <% } %>
                <label for="name">Route name</label>
                <input class="border border-black" type="text" name="name">
                <div class="waypoints">
                    <%# Filled by client-side javascript %>
                </div>
                
                <input class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 hover:cursor-pointer" type="submit" value="Save">
                <button type="button" class="add-waypoint text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Add waypoint</button>
                <button type="button" class="remove-waypoint text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Remove waypoint</button>
            </form>
        </div>
    </div>

    <script
      src="https://maps.googleapis.com/maps/api/js?key=***REMOVED***&callback=initMap&v=weekly"
      defer
    ></script>
    
    <script>
        var map;
        var markers = [];
        var currentEditListener = null;

        function initMap() {
            var initialLocation = {
                lat: -34.397,
                lng: 150.644
            };

            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 8,
                center: initialLocation,
                clickableIcons: true // Enable click events on POIs
            });

            init();
        }

        // // Adds a marker to the map and push to the array.
        // function addMarker(location) {
        //     var marker = new google.maps.Marker({
        //         position: location,
        //         map: map
        //     });
        //     markers.push(marker);
        // }

        function removeLastWaypoint () {
            const w = document.querySelectorAll('.waypoint-entry');
            if (w.length === 1) return;
            w[w.length - 1].remove();
        }

        function getNextId () {
            const waypoints = document.querySelectorAll('[data-id]');
            if (waypoints.length === 0) return 0;
            const currentId = Number(waypoints[waypoints.length - 1].dataset.id);
            return currentId + 1;
        }

        // <%# The event that happens when user clicks on map (while editing a waypoint). %>
        var clickListener = function(event) {
            markers[this.id].setVisible(true);
            markers[this.id].setPosition(event.latLng);

            const latInput = document.querySelector(`#w${this.id}-lat`);
            latInput.value = event.latLng.lat();
            const lngInput = document.querySelector(`#w${this.id}-lng`);
            lngInput.value = event.latLng.lng();
        };

        // <%# Adds a waypoint. 
        // If no arguments given, then it is "empty" and not visible on the map.
        // Otherwise it is visible on the map and has its form filled with current data. %>
        function addWaypoint ({ id_=null, lat=null, lng=null, name='' } = {}) {
            const id = id_ !== null ? id_ : getNextId();
            const waypointContainer = document.createElement('div');
            waypointContainer.classList.add('waypoint-entry');
            waypointContainer.dataset.id = id;

            const idInputId = `w${id}-id`;
            const latInputId = `w${id}-lat`;
            const lngInputId = `w${id}-lng`;
            const nameInputId = `w${id}-name`;
            const editButtonId = `w${id}-edit`;
            const saveButtonId = `w${id}-save`;
            const waypointInner = 
           `<p>Waypoint ${id}</p>
            <input hidden type="number" name="${idInputId}" value="${id}">
            <input id="${latInputId}" class="border border-black" type="text" name="${latInputId}">
            <input id="${lngInputId}" class="border border-black" type="text" name="${lngInputId}">
            <input id="${nameInputId}" class="border border-black" type="text" name="${nameInputId}">
            <button id="${editButtonId}" type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Edit</button>
            <button id="${saveButtonId}" type="button" class="hidden text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-red-300 dark:hover:bg-red-400 focus:outline-none dark:focus:ring-blue-800">Save</button>`;

            waypointContainer.innerHTML = waypointInner;

            const waypointsContainer = document.querySelector('.waypoints');
            waypointsContainer.append(waypointContainer);

            const marker = new google.maps.Marker({
                position: { lat: Number(lat), lng: Number(lng) },
                map: map,
                visible: Boolean(id_ !== null)
            });
            markers.push(marker);
            const latInput = document.querySelector(`#${latInputId}`);
            latInput.value = lat;
            const lngInput = document.querySelector(`#${lngInputId}`);
            lngInput.value = lng;
            const nameInput = document.querySelector(`#${nameInputId}`);
            nameInput.value = name;
            const editButton = document.querySelector(`#${editButtonId}`);
            const saveButton = document.querySelector(`#${saveButtonId}`);
            editButton.addEventListener('click', function () {
                console.log(`edit button ${id} clicked`);
                currentEditListener = map.addListener('click', clickListener.bind({id: id}));

                editButton.classList.add('hidden');
                saveButton.classList.remove('hidden');
            });
            saveButton.addEventListener('click', function () {
                console.log(`save button ${id} clicked`);
                google.maps.event.removeListener(currentEditListener);

                editButton.classList.remove('hidden');
                saveButton.classList.add('hidden');
            });
        }

        // <%# Prefills form (and map) with waypoints from the server %>
        function prefillForm () {
            const nameInput = document.querySelector('input[name="name"]');
            nameInput.value = '<%= locals.route.name %>';
        
            const waypoints = <%- JSON.stringify(locals.waypoints) %>;
            if (waypoints.length === 0) {
                addWaypoint();
            } else {
                waypoints.forEach(waypoint => {
                    console.log(waypoint.lat);
                    addWaypoint({
                        id_: waypoint.order_id,
                        lat: waypoint.latitude,
                        lng: waypoint.longitude,
                        name: waypoint.name
                    });
                });
            }
        }

        // <%# Initializes buttons and prefills form (with waypoints from the server) %>
        function init () {
            const addButton = document.querySelector('.add-waypoint');
            addButton.addEventListener('click', addWaypoint);
            const removeButton = document.querySelector('.remove-waypoint');
            removeButton.addEventListener('click', removeLastWaypoint);
            
            prefillForm();
        }
        // (function () { 
        //     init();
        // })();
    </script>
</body>
</html>